from playwright.sync_api import sync_playwright
import time
import os
import datetime

def capture_developer_jobs_screenshot():

    with sync_playwright() as p:
        browser = p.chromium.launch(headless=True)
        page = browser.new_page()

        keyword = "개발자"
        
        # 스크린샷을 저장할 디렉토리 생성
        output_dir = "job_postings_screenshots"
        os.makedirs(output_dir, exist_ok=True)

        today_date = datetime.date.today().strftime("%y%m%d")
        
        post_count = 0
        page_num = 1
        max_posts = 200

        while post_count < max_posts:
            url = f"https://www.jobkorea.co.kr/Search/?stext={keyword}&Page_No={page_num}"
            
            print(f"Navigating to page {page_num} for: {keyword}")
            page.goto(url, wait_until='domcontentloaded')

            # 페이지 로드를 위해 잠시 대기
            time.sleep(4)

            # 공고 목록 가져오기 (contains selector)
            job_postings = page.query_selector_all('div[class*="h7nnv10"]')

            if not job_postings:
                print("No more job postings found. Exiting.")
                break

            print(f"Found {len(job_postings)} job postings on page {page_num}. Taking screenshots...")

            for post in job_postings:
                if post_count >= max_posts:
                    break
                
                try:
                    screenshot_path = os.path.join(output_dir, f"{today_date}_jobkorea_{keyword}_{post_count + 1}.png")
                    post.screenshot(path=screenshot_path)
                    print(f"Screenshot saved to {screenshot_path}")
                    post_count += 1
                except Exception as e:
                    print(f"Could not take screenshot for posting {post_count + 1}: {e}")
            
            if post_count >= max_posts:
                print(f"Reached the maximum of {max_posts} job postings.")
                break

            page_num += 1
        print("스크린샷 완료")
        browser.close()

if __name__ == '__main__':
    capture_developer_jobs_screenshot()
